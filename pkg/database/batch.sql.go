// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: batch.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createBatchStat = `-- name: CreateBatchStat :one

INSERT INTO batch_stats(id,sym_id,start_time,end_time,open,close,high,low,volume,period_minutes)
VALUES($1,$2,$3,$4,$5,$6,$7,$8,$9,$10)
    returning id, sym_id, start_time, end_time, open, close, high, low, volume, period_minutes
`

type CreateBatchStatParams struct {
	ID            uuid.UUID
	SymID         uuid.UUID
	StartTime     int64
	EndTime       int64
	Open          float64
	Close         float64
	High          float64
	Low           float64
	Volume        float64
	PeriodMinutes int32
}

func (q *Queries) CreateBatchStat(ctx context.Context, arg CreateBatchStatParams) (BatchStat, error) {
	row := q.db.QueryRowContext(ctx, createBatchStat,
		arg.ID,
		arg.SymID,
		arg.StartTime,
		arg.EndTime,
		arg.Open,
		arg.Close,
		arg.High,
		arg.Low,
		arg.Volume,
		arg.PeriodMinutes,
	)
	var i BatchStat
	err := row.Scan(
		&i.ID,
		&i.SymID,
		&i.StartTime,
		&i.EndTime,
		&i.Open,
		&i.Close,
		&i.High,
		&i.Low,
		&i.Volume,
		&i.PeriodMinutes,
	)
	return i, err
}
